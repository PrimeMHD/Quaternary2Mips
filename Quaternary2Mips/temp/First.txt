FIRST(Assignment_operator) = {%=  &=  *=  +=  -=  /=  <<=  =  >>=  ^=  |=  }
FIRST(Assignment_statement) = {++  --  identifier  }
FIRST(Between_logical_operator) = {!=  &&  <  <=  ==  >  >=  ||  }
FIRST(Between_operator) = {&  *  +  -  /  <<  >>  ^  |  }
FIRST(Bool_expression) = {!  (  constvalue  identifier  }
FIRST(Bool_expression_left) = {(  constvalue  identifier  }
FIRST(Cal_expression) = {(  +  ++  -  --  constvalue  identifier  ~  }
FIRST(Cal_expression_left) = {(  constvalue  identifier  }
FIRST(Call_function) = {identifier  }
FIRST(Const_value) = {constvalue  }
FIRST(Create_function_table) = {$  }
FIRST(Create_loop_table) = {$  }
FIRST(Create_selection_table) = {$  }
FIRST(Exit_function_table) = {$  }
FIRST(Exit_loop_table) = {$  }
FIRST(Exit_selection_table) = {$  }
FIRST(Exit_symble_table) = {$  }
FIRST(Expression) = {!  (  +  ++  -  --  constvalue  identifier  ~  }
FIRST(Function) = {char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Function_body) = {{  }
FIRST(Function_statement) = {char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Loop_statement) = {while  }
FIRST(Non_signble_type) = {double  float  void  }
FIRST(Parameter_definition) = {$  char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Parameter_definition_more) = {$  ,  }
FIRST(Parameter_list) = {!  $  (  +  ++  -  --  constvalue  identifier  ~  }
FIRST(Parameter_list_more) = {$  ,  }
FIRST(Post_operator) = {++  --  }
FIRST(Pre_logical_operator) = {!  }
FIRST(Pre_operator) = {+  ++  -  --  ~  }
FIRST(Pre_while_expression) = {!  (  +  ++  -  --  constvalue  identifier  ~  }
FIRST(Program) = {$  char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Program') = {#  char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Selection_expression) = {!  (  +  ++  -  --  constvalue  identifier  ~  }
FIRST(Selection_statement) = {if  }
FIRST(Selection_statement_else) = {else  }
FIRST(Selection_statement_if) = {if  }
FIRST(Signble_type) = {char  int  long  short  }
FIRST(Single_assign_operator) = {++  --  }
FIRST(Stmt) = {++  --  ;  break  char  const  continue  double  float  identifier  if  int  long  return  short  signed  unsigned  void  while  }
FIRST(Stmts) = {$  ++  --  ;  break  char  const  continue  double  float  identifier  if  int  long  return  short  signed  unsigned  void  while  }
FIRST(Type) = {char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Variable_statement) = {char  const  double  float  int  long  short  signed  unsigned  void  }
FIRST(Variable_statement_more) = {$  ,  }
FIRST(Variable_type) = {char  double  float  int  long  short  signed  unsigned  void  }
FIRST(While) = {while  }
